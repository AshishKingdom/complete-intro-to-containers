{"data":{"site":{"siteMetadata":{"title":"Complete Intro to Containers","subtitle":"üê≥","description":"A complete intro to Linux containers for developers","keywords":["linux","containers","javascript","node","brian holt","frontend masters","docker","nodejs"]}},"allMarkdownRemark":{"edges":[{"node":{"id":"538dc674-608a-567f-9e19-d02078827f2e","frontmatter":{"order":1,"path":"/intro","title":"Introduction","section":"Welcome","description":"Brian Holt lays out the course objectives, his background, and where to file issues with the course as well as why he created this course: he believes that containers are going to be important to every developer going forward."}}},{"node":{"id":"45d0224c-f9d6-5298-ba07-64bbc2e4167d","frontmatter":{"order":2,"path":"/what-are-containers","title":"What Are Containers?","section":"Crafting Containers By Hand","description":"Containers are simpler than you think they are. Brian lays out an abridged history of virtualization, why the creation of containers was necessary, and what containers actually achieve for you."}}},{"node":{"id":"42900b5b-1aa4-5bd3-9159-7f7c6e4bd716","frontmatter":{"order":2.1,"path":"/chroot","title":"chroot","section":"Crafting Containers By Hand","description":"chroot is the first of the important Linux kernel features that allow us to create contained processes without a whole virtualization layer. Brian shows how to use chroot to restrict a process to a certain file tree."}}},{"node":{"id":"01945684-b58a-5116-8850-e3ce3881d1f2","frontmatter":{"order":2.2,"path":"/namespaces","title":"Namespaces","section":"Crafting Containers By Hand","description":"Namespaces is the second feature of the Linux kernel that allow for containers. Namespaces let you hide processes, networks, and other core functionality from sets of processes. Brian shows us how to use namespaces manually."}}},{"node":{"id":"d769b198-38f0-5b25-acab-8a6d61357bf3","frontmatter":{"order":2.3,"path":"/cgroups","title":"cgroups","section":"Crafting Containers By Hand","description":"cgroups, or control groups, are the third and last feature of the Linux kernel that allow for containers. They allow us to restrict how much resources a process can take. Brian shows how to manually use cgroups on to restrict processes."}}},{"node":{"id":"56f933ce-8321-53be-8960-9ed0461a8cdd","frontmatter":{"order":3,"path":"/getting-set-up-with-docker","title":"Getting Set Up with Docker","section":"Docker","description":"This is probably why you're here: Docker. Docker is a commandline tool that made creating, updating packaging, distributing, and running containers significantly easier which in turns allowed them become very popular with not just system administraters but the programming populace at large."}}},{"node":{"id":"b5db4683-c649-5504-9e9e-5c08f091a3cc","frontmatter":{"order":3.1,"path":"/docker-images-without-docker","title":"Docker Images without Docker","section":"Docker","description":"Docker give us the fabulous ability to use containers other people have used by pulling them Docker Hub which is like a package manager for containers. Brian shows us how to download a container, unpack it, and use it without Docker so you can know how to do it manually."}}},{"node":{"id":"3b050b93-a469-5b36-899c-09ea8127609b","frontmatter":{"order":3.2,"path":"/docker-images-with-docker","title":"Docker Images with Docker","section":"Docker","description":"Brian will now show you how to use the Docker CLI directly to use images and how the Docker command line client works with regard to images of containers."}}},{"node":{"id":"9c9e858b-e0c1-5e95-9c42-8d3b8a5de705","frontmatter":{"order":3.3,"path":"/nodejs-on-docker","title":"Node.js on Docker","section":"Docker","description":"To demonstrate the wide variety of containers that exist, Brian shows you how to pull down a Node.js container that uses Debian instead of Ubuntu."}}},{"node":{"id":"123f1b6b-f40e-5f19-b89a-909bd2966d9a","frontmatter":{"order":3.4,"path":"/tags","title":"Tags","section":"Docker","description":"Tags are an essential part of the Docker CLI that allow you to label your containers with referenceable tags and allows you to tie your app to specific versions of containers, whether that's a certain version of Linux or a particular version of Node.js (or both!)"}}},{"node":{"id":"a8d01de2-0931-5e7b-9186-8b9dc3a67ff6","frontmatter":{"order":3.5,"path":"/docker-cli","title":"Docker CLI","section":"Docker","description":"There's a lot of features of the Docker CLI and while that won't necessarily be the focus of this workshop, Brian takes a moment to explain to you some of the additional available functionality."}}},{"node":{"id":"23b50052-5d69-579b-bce4-ad79397f48a3","frontmatter":{"order":4,"path":"/dockerfile","title":"Intro to Dockerfiles","section":"The Dockerfile","description":"Docker has a special file called a `Dockerfile` which allows you to outline how a container will be built. Each line in a Docker file is a new a directive of how to change your Docker container. Brian goes into the basics of write a Dockerfile here."}}},{"node":{"id":"8efe27f1-2120-53da-9609-1b0ef0eb538a","frontmatter":{"order":4.1,"path":"/build-a-nodejs-app","title":"Build a Node.js App","section":"The Dockerfile","description":"In order to understand Dockerfiles better, Brian shows how to build a Node.js application inside of a container and how to write a proper Dockerfile for a Node.js app."}}},{"node":{"id":"cf624971-beb5-57e8-9a6c-50385659ad00","frontmatter":{"order":4.2,"path":"/more-complicated-nodejs-app","title":"A More Complicated Node.js App","section":"The Dockerfile","description":"Brian shows how to write a Dockerfile for a more complicated app and how to avoid problems with Node.js native modules"}}},{"node":{"id":"c208a559-9afe-5ae6-baf9-0e9ae283eb07","frontmatter":{"order":4.4,"path":"/expose","title":"A Note on EXPOSE","section":"The Dockerfile","description":"It can be confusing what the EXPOSE instruction does so Brian takes a moment to explain why you won't necessarily need to use it."}}},{"node":{"id":"5eef9548-c46f-59a6-a3a7-ac135b34712a","frontmatter":{"order":4.5,"path":"/layers","title":"Layers","section":"The Dockerfile","description":"Brian goes into depth about what layers are with regard to Docker images and how you can leverage Docker's caching of layers to more quickly rebuild containers"}}},{"node":{"id":"8ec92bc4-7ff4-5493-b2ff-d866855adbb0","frontmatter":{"order":5,"path":"/alpine-linux","title":"Alpine Linux","section":"Making Tiny Containers","description":"Tiny containers make a lot of things easier and more secure. In this section Brian shows us how to go from a nearly gigabyte-sized Ubuntu container to a 80MB Alpine container with no functionality loss and more secure to boot."}}},{"node":{"id":"3a5f48a7-a336-5cca-b295-efdcb7038a43","frontmatter":{"order":5.1,"path":"/making-our-own-alpine-nodejs-container","title":"Making Our Own Alpine Node.js Container","section":"Making Tiny Containers","description":"As an exercise to understand what goes into making a container from scratch, Brian shows how to create a Node.js container from the base Alpine container."}}},{"node":{"id":"31c452eb-ca9d-5050-bee7-006dd45bd1e7","frontmatter":{"order":5.2,"path":"/multi-stage-builds","title":"Multi Stage Builds","section":"Making Tiny Containers","description":"Multi stage builds can help you make your containers even smaller and more secure by leaving out tools only needed to build the container. Brian shows how to make the Alpine-Node.js container built in previous sections even smaller using this technique."}}},{"node":{"id":"28b931ea-36e4-55e0-8e47-eb20887c26fd","frontmatter":{"order":5.3,"path":"/static-assets-project","title":"Static Assets Project","section":"Making Tiny Containers","description":"Brian gives an exercise to make the create-react-app app be served by NGINX so that it's understandable how to pull into someone else's container they've built and build on top of it."}}},{"node":{"id":"970a0953-d8ee-5678-851e-3a09c01b25e0","frontmatter":{"order":6,"path":"/bind-mounts","title":"Bind Mounts","section":"Features in Docker","description":"Let's start here because this is easier to see the use case for. Bind mounts allow you to mount files from your host computer into your container. This allows you to use the containers a much more flexible way than previously possible."}}},{"node":{"id":"862cd95b-5ebd-594f-a669-58e0eeafe8e9","frontmatter":{"order":6.1,"path":"/volumes","title":"Volumes","section":"Features in Docker","description":"Volumes are so that your containers can maintain state between runs. If you have a container that runs and the next time it runs it needs the results from the previous time it ran, you need volumes."}}},{"node":{"id":"a364d46e-0c19-5ed3-9f12-6663b582720a","frontmatter":{"order":6.2,"path":"/dev-containers","title":"Using Containers for your Dev Environment","section":"Features in Docker","description":"Containers can be useful as development environments. This makes them shareable, recreatable, portable, and makes them a great launching pad for building the production environment too. Brian shows how to use containers to build a Hugo (a Go-based static site generator) project."}}},{"node":{"id":"3648b629-c26c-570a-b608-75800526746f","frontmatter":{"order":6.3,"path":"/visual-studio-code","title":"Dev Containers with Visual Studio Code","section":"Features in Docker","description":"Containers can be used in conjunction with Visual Studio Code to automatically set up development environments for yourself and other developers working on the project. Brian shows how to set up dev containers specifically for Visual Studio Code."}}},{"node":{"id":"c99f74f0-6d86-5541-82bf-df5475ef8907","frontmatter":{"order":6.4,"path":"/networking","title":"Networking with Docker","section":"Features in Docker","description":"Networking is key when you start making projects have multiple containers. Docker allows you to create bridge networks to connect connect containers together. Brian shows how to connect two MongoDB containers together so you can have one container running a database and one running the client to connect to the other."}}},{"node":{"id":"f56d3345-4bbb-51ed-b532-2c448147f676","frontmatter":{"order":7,"path":"/docker-compose","title":"Docker Compose","section":"Multi Container Projects","description":"Docker Compose allows for setting up multiple container set ups with a single configuration file as opposed to having to hand create your development. Brian shows how to take the Node.js + MongoDB app and create the environment with just `docker-compose up`."}}},{"node":{"id":"75453108-85bc-56c0-9905-0285754691cc","frontmatter":{"order":7.1,"path":"/kubernetes","title":"Kubernetes","section":"Multi Container Projects","description":"Kubernetes is a container orchestration tool. It allows you to manage large, complicated clusters of containers to multiple different hosts. Brian goes over what Kubernetes is and the definitions of the various Kubernetes terms."}}},{"node":{"id":"f1f72619-7998-5da5-b2c2-17b8d4685cdd","frontmatter":{"order":7.2,"path":"/kompose","title":"Kompose","section":"Multi Container Projects","description":"Kompose converts a docker-compose.yml configuration to a Kubernetes configuration. Brian shows how to take the previous Docker Compose YAML file and running that same configuration through Kubernetes"}}},{"node":{"id":"e423a2a2-d951-599f-b0cd-575252cd862e","frontmatter":{"order":8,"path":"/buildah","title":"Buildah","section":"OCI (Non-Docker) Containers","description":"There are alternatives to Docker. Buildah is a tool that allows you to build new containers. It actually allows many different ways of building containers, from writing bash scripts that define the containers to building containers interactively. Brian shows how to build a OCI container with a Dockerfile via Buildah."}}},{"node":{"id":"af3f19a4-09a1-5671-bc6b-04dcd565bd9d","frontmatter":{"order":8.1,"path":"/podman","title":"Podman","section":"OCI (Non-Docker) Containers","description":"Podman allows you to run OCI or Docker containers. Brian takes the Buildah container that was built in the previous section and runs it with Podman."}}},{"node":{"id":"ddbccbfa-1f05-50c2-8cc0-e51d8471bd2b","frontmatter":{"order":9,"path":"/conclusion","title":"Conclusion","section":"Wrapping Up","description":"Brian wraps up the whole course and gives additional topics to follow up on for those who are curious. Congrats! You've learned how to build and use containers!"}}}]}}}